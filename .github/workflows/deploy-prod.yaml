name: Deploy Prod
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  BEFORE_SHA: ${{ github.event.before }}
  SAM_CLI_TELEMETRY: 0

jobs:
  config:
    name: Configure
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      run-timestamp: ${{ steps.run-timestamp.outputs.timestamp }}

    steps:
      - run: echo üëæ Initiated by ${{ github.actor }}
      - run: echo ‚ö°Ô∏è Triggered by ${{ github.event_name }} to ${{ github.ref }}
      - run: echo üêß Running on ${{ runner.os }} server

      - name: Checkout code from ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Disable the NPM "prepare" script
        shell: bash
        run: sed -i '/"prepare":/d' package.json

      - name: Generate a timestamp for this run
        id: run-timestamp
        shell: bash
        run: echo ::set-output name=timestamp::$(date +'%s%N')

      - name: Cache the repository directory
        uses: actions/cache@v2
        with:
          path: |
            ./*
            !./node_modules
          key: ${{ github.sha }}-run-${{ steps.run-timestamp.outputs.timestamp }}

      - name: Restore node modules from cache
        id: node-modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true
        if: ${{ steps.node-modules.outputs.cache-hit != 'true' }}

      - name: Upgrade NPM version
        if: ${{ steps.node-modules.outputs.cache-hit != 'true' }}
        run: npm install -g npm@latest

      - name: Install node modules
        if: ${{ steps.node-modules.outputs.cache-hit != 'true' }}
        run: npm ci

  build:
    name: Build
    needs: 
      - config
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - run: git fetch --all

      - name: Sets the base and head SHAs
        uses: nrwl/nx-set-shas@v3

      - name: Restore node modules from cache
        id: node-modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true

      - name: Install node modules
        if: ${{ steps.node-modules.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Install SAM
        uses: aws-actions/setup-sam@v1

      - name: Restore repository from cache
        uses: actions/cache@v2
        with:
          path: |
            ./*
            !./node_modules
          key: ${{ github.sha }}-run-${{ needs.config.outputs.run-timestamp }}

      - name: Cache the build directory
        uses: actions/cache@v2
        with:
          path: ./.aws-sam/*
          key: ${{ github.sha }}-build-${{ needs.config.outputs.run-timestamp }}

      - name: Build the Lambda
        shell: bash
        run: npm run affected:build:prod

  deploy:
    name: Deploy
    needs:
      - config
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Pull the full git history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Sets the base and head SHAs
        uses: nrwl/nx-set-shas@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Restore node modules from cache
        id: node-modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true

      - name: Install node modules
        if: ${{ steps.node-modules.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Install SAM
        uses: aws-actions/setup-sam@v1

      - name: Restore repository from cache
        uses: actions/cache@v2
        with:
          path: |
            ./*
            !./node_modules
          key: ${{ github.sha }}-run-${{ needs.config.outputs.run-timestamp }}

      - name: Restore the build directory from cache
        uses: actions/cache@v2
        with:
          path: ./.aws-sam/*
          key: ${{ github.sha }}-build-${{ needs.config.outputs.run-timestamp }}

      - name: Deploy the build artifacts
        shell: bash
        run: npm run affected:deploy:prod
